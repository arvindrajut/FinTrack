{"ast":null,"code":"var _jsxFileName = \"/Users/arvindraju/MERN-Expense-Tracker/frontend/src/pages/Reports.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reports = ({\n  expenses = [],\n  fetchExpenses\n}) => {\n  _s();\n  // Set default empty array\n  const [monthlyData, setMonthlyData] = useState({});\n  const [categoryData, setCategoryData] = useState({});\n  const [weeklyTrendData, setWeeklyTrendData] = useState({});\n  useEffect(() => {\n    if (expenses && expenses.length === 0) {\n      fetchExpenses(); // Fetch data if not already available\n    } else if (expenses && expenses.length > 0) {\n      processData(expenses);\n    }\n  }, [expenses, fetchExpenses]);\n  const processData = expenses => {\n    if (!expenses || expenses.length === 0) return; // Check for empty or undefined expenses\n\n    const monthlyTotals = {};\n    const categoryTotals = {};\n    const weeklyTrends = [0, 0, 0, 0];\n    expenses.forEach(expense => {\n      const date = new Date(expense.date);\n      const month = date.toLocaleString('default', {\n        month: 'short'\n      });\n      const week = Math.floor((date.getDate() - 1) / 7);\n\n      // Monthly Totals for Bar Chart\n      monthlyTotals[month] = (monthlyTotals[month] || 0) + expense.amount;\n\n      // Category Totals for Pie Chart\n      categoryTotals[expense.category] = (categoryTotals[expense.category] || 0) + expense.amount;\n\n      // Weekly Trends for Line Chart\n      if (week >= 0 && week < 4) {\n        weeklyTrends[week] += expense.amount;\n      }\n    });\n    setMonthlyData({\n      labels: Object.keys(monthlyTotals),\n      datasets: [{\n        label: 'Monthly Expenses',\n        data: Object.values(monthlyTotals),\n        backgroundColor: 'rgba(75, 192, 192, 0.5)'\n      }]\n    });\n    setCategoryData({\n      labels: Object.keys(categoryTotals),\n      datasets: [{\n        label: 'Category-wise Expenses',\n        data: Object.values(categoryTotals),\n        backgroundColor: ['rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)', 'rgba(255, 206, 86, 0.6)', 'rgba(75, 192, 192, 0.6)', 'rgba(153, 102, 255, 0.6)']\n      }]\n    });\n    setWeeklyTrendData({\n      labels: ['Week 1', 'Week 2', 'Week 3', 'Week 4'],\n      datasets: [{\n        label: 'Weekly Expenses Trend',\n        data: weeklyTrends,\n        borderColor: 'rgba(75, 192, 192, 1)',\n        backgroundColor: 'rgba(75, 192, 192, 0.3)',\n        fill: true\n      }]\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reports\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: '700px',\n        margin: 'auto',\n        padding: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Monthly Expenses (Bar Chart)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        data: monthlyData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: '500px',\n        margin: 'auto',\n        padding: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Category-wise Expenses (Pie Chart)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Pie, {\n        data: categoryData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: '700px',\n        margin: 'auto',\n        padding: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Weekly Expenses Trend (Line Chart)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: weeklyTrendData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n_s(Reports, \"DjC4rH2wQZSxPf2ZHZPmr4PjU/A=\");\n_c = Reports;\nexport default Reports;\nvar _c;\n$RefreshReg$(_c, \"Reports\");","map":{"version":3,"names":["Reports","expenses","fetchExpenses","_s","monthlyData","setMonthlyData","useState","categoryData","setCategoryData","weeklyTrendData","setWeeklyTrendData","useEffect","length","processData","monthlyTotals","categoryTotals","weeklyTrends","forEach","expense","date","Date","month","toLocaleString","week","Math","floor","getDate","amount","category","labels","Object","keys","datasets","label","data","values","backgroundColor","borderColor","fill","_jsxDEV","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","margin","Bar","Pie","Line","_c","$RefreshReg$"],"sources":["/Users/arvindraju/MERN-Expense-Tracker/frontend/src/pages/Reports.js"],"sourcesContent":["const Reports = ({ expenses = [], fetchExpenses }) => {  // Set default empty array\n    const [monthlyData, setMonthlyData] = useState({});\n    const [categoryData, setCategoryData] = useState({});\n    const [weeklyTrendData, setWeeklyTrendData] = useState({});\n\n    useEffect(() => {\n        if (expenses && expenses.length === 0) {\n            fetchExpenses(); // Fetch data if not already available\n        } else if (expenses && expenses.length > 0) {\n            processData(expenses);\n        }\n    }, [expenses, fetchExpenses]);\n\n    const processData = (expenses) => {\n        if (!expenses || expenses.length === 0) return; // Check for empty or undefined expenses\n\n        const monthlyTotals = {};\n        const categoryTotals = {};\n        const weeklyTrends = [0, 0, 0, 0];\n\n        expenses.forEach(expense => {\n            const date = new Date(expense.date);\n            const month = date.toLocaleString('default', { month: 'short' });\n            const week = Math.floor((date.getDate() - 1) / 7);\n\n            // Monthly Totals for Bar Chart\n            monthlyTotals[month] = (monthlyTotals[month] || 0) + expense.amount;\n\n            // Category Totals for Pie Chart\n            categoryTotals[expense.category] = (categoryTotals[expense.category] || 0) + expense.amount;\n\n            // Weekly Trends for Line Chart\n            if (week >= 0 && week < 4) {\n                weeklyTrends[week] += expense.amount;\n            }\n        });\n\n        setMonthlyData({\n            labels: Object.keys(monthlyTotals),\n            datasets: [\n                {\n                    label: 'Monthly Expenses',\n                    data: Object.values(monthlyTotals),\n                    backgroundColor: 'rgba(75, 192, 192, 0.5)',\n                },\n            ],\n        });\n\n        setCategoryData({\n            labels: Object.keys(categoryTotals),\n            datasets: [\n                {\n                    label: 'Category-wise Expenses',\n                    data: Object.values(categoryTotals),\n                    backgroundColor: [\n                        'rgba(255, 99, 132, 0.6)',\n                        'rgba(54, 162, 235, 0.6)',\n                        'rgba(255, 206, 86, 0.6)',\n                        'rgba(75, 192, 192, 0.6)',\n                        'rgba(153, 102, 255, 0.6)',\n                    ],\n                },\n            ],\n        });\n\n        setWeeklyTrendData({\n            labels: ['Week 1', 'Week 2', 'Week 3', 'Week 4'],\n            datasets: [\n                {\n                    label: 'Weekly Expenses Trend',\n                    data: weeklyTrends,\n                    borderColor: 'rgba(75, 192, 192, 1)',\n                    backgroundColor: 'rgba(75, 192, 192, 0.3)',\n                    fill: true,\n                },\n            ],\n        });\n    };\n\n    return (\n        <div style={{ padding: '20px' }}>\n            <h1>Reports</h1>\n\n            <div style={{ maxWidth: '700px', margin: 'auto', padding: '20px' }}>\n                <h3>Monthly Expenses (Bar Chart)</h3>\n                <Bar data={monthlyData} />\n            </div>\n\n            <div style={{ maxWidth: '500px', margin: 'auto', padding: '20px' }}>\n                <h3>Category-wise Expenses (Pie Chart)</h3>\n                <Pie data={categoryData} />\n            </div>\n\n            <div style={{ maxWidth: '700px', margin: 'auto', padding: '20px' }}>\n                <h3>Weekly Expenses Trend (Line Chart)</h3>\n                <Line data={weeklyTrendData} />\n            </div>\n        </div>\n    );\n};\nexport default Reports;\n"],"mappings":";;;AAAA,MAAMA,OAAO,GAAGA,CAAC;EAAEC,QAAQ,GAAG,EAAE;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAAG;EACrD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGF,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpD,MAAM,CAACG,eAAe,EAAEC,kBAAkB,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE1DK,SAAS,CAAC,MAAM;IACZ,IAAIV,QAAQ,IAAIA,QAAQ,CAACW,MAAM,KAAK,CAAC,EAAE;MACnCV,aAAa,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC,MAAM,IAAID,QAAQ,IAAIA,QAAQ,CAACW,MAAM,GAAG,CAAC,EAAE;MACxCC,WAAW,CAACZ,QAAQ,CAAC;IACzB;EACJ,CAAC,EAAE,CAACA,QAAQ,EAAEC,aAAa,CAAC,CAAC;EAE7B,MAAMW,WAAW,GAAIZ,QAAQ,IAAK;IAC9B,IAAI,CAACA,QAAQ,IAAIA,QAAQ,CAACW,MAAM,KAAK,CAAC,EAAE,OAAO,CAAC;;IAEhD,MAAME,aAAa,GAAG,CAAC,CAAC;IACxB,MAAMC,cAAc,GAAG,CAAC,CAAC;IACzB,MAAMC,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAEjCf,QAAQ,CAACgB,OAAO,CAACC,OAAO,IAAI;MACxB,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,OAAO,CAACC,IAAI,CAAC;MACnC,MAAME,KAAK,GAAGF,IAAI,CAACG,cAAc,CAAC,SAAS,EAAE;QAAED,KAAK,EAAE;MAAQ,CAAC,CAAC;MAChE,MAAME,IAAI,GAAGC,IAAI,CAACC,KAAK,CAAC,CAACN,IAAI,CAACO,OAAO,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;;MAEjD;MACAZ,aAAa,CAACO,KAAK,CAAC,GAAG,CAACP,aAAa,CAACO,KAAK,CAAC,IAAI,CAAC,IAAIH,OAAO,CAACS,MAAM;;MAEnE;MACAZ,cAAc,CAACG,OAAO,CAACU,QAAQ,CAAC,GAAG,CAACb,cAAc,CAACG,OAAO,CAACU,QAAQ,CAAC,IAAI,CAAC,IAAIV,OAAO,CAACS,MAAM;;MAE3F;MACA,IAAIJ,IAAI,IAAI,CAAC,IAAIA,IAAI,GAAG,CAAC,EAAE;QACvBP,YAAY,CAACO,IAAI,CAAC,IAAIL,OAAO,CAACS,MAAM;MACxC;IACJ,CAAC,CAAC;IAEFtB,cAAc,CAAC;MACXwB,MAAM,EAAEC,MAAM,CAACC,IAAI,CAACjB,aAAa,CAAC;MAClCkB,QAAQ,EAAE,CACN;QACIC,KAAK,EAAE,kBAAkB;QACzBC,IAAI,EAAEJ,MAAM,CAACK,MAAM,CAACrB,aAAa,CAAC;QAClCsB,eAAe,EAAE;MACrB,CAAC;IAET,CAAC,CAAC;IAEF5B,eAAe,CAAC;MACZqB,MAAM,EAAEC,MAAM,CAACC,IAAI,CAAChB,cAAc,CAAC;MACnCiB,QAAQ,EAAE,CACN;QACIC,KAAK,EAAE,wBAAwB;QAC/BC,IAAI,EAAEJ,MAAM,CAACK,MAAM,CAACpB,cAAc,CAAC;QACnCqB,eAAe,EAAE,CACb,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB,EACzB,0BAA0B;MAElC,CAAC;IAET,CAAC,CAAC;IAEF1B,kBAAkB,CAAC;MACfmB,MAAM,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC;MAChDG,QAAQ,EAAE,CACN;QACIC,KAAK,EAAE,uBAAuB;QAC9BC,IAAI,EAAElB,YAAY;QAClBqB,WAAW,EAAE,uBAAuB;QACpCD,eAAe,EAAE,yBAAyB;QAC1CE,IAAI,EAAE;MACV,CAAC;IAET,CAAC,CAAC;EACN,CAAC;EAED,oBACIC,OAAA;IAAKC,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC5BH,OAAA;MAAAG,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEhBP,OAAA;MAAKC,KAAK,EAAE;QAAEO,QAAQ,EAAE,OAAO;QAAEC,MAAM,EAAE,MAAM;QAAEP,OAAO,EAAE;MAAO,CAAE;MAAAC,QAAA,gBAC/DH,OAAA;QAAAG,QAAA,EAAI;MAA4B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrCP,OAAA,CAACU,GAAG;QAACf,IAAI,EAAE9B;MAAY;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eAENP,OAAA;MAAKC,KAAK,EAAE;QAAEO,QAAQ,EAAE,OAAO;QAAEC,MAAM,EAAE,MAAM;QAAEP,OAAO,EAAE;MAAO,CAAE;MAAAC,QAAA,gBAC/DH,OAAA;QAAAG,QAAA,EAAI;MAAkC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3CP,OAAA,CAACW,GAAG;QAAChB,IAAI,EAAE3B;MAAa;QAAAoC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAENP,OAAA;MAAKC,KAAK,EAAE;QAAEO,QAAQ,EAAE,OAAO;QAAEC,MAAM,EAAE,MAAM;QAAEP,OAAO,EAAE;MAAO,CAAE;MAAAC,QAAA,gBAC/DH,OAAA;QAAAG,QAAA,EAAI;MAAkC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3CP,OAAA,CAACY,IAAI;QAACjB,IAAI,EAAEzB;MAAgB;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAC3C,EAAA,CAnGIH,OAAO;AAAAoD,EAAA,GAAPpD,OAAO;AAoGb,eAAeA,OAAO;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}