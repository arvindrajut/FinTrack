{"ast":null,"code":"var _jsxFileName = \"/Users/arvindraju/MERN-Expense-Tracker/frontend/src/pages/Reports.js\",\n  _s = $RefreshSig$();\n// src/pages/Reports.js\nimport React, { useEffect, useState } from 'react';\nimport { Bar, Pie, Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, ArcElement, PointElement, LineElement } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, ArcElement, PointElement, LineElement);\nconst Reports = ({\n  expenses = []\n}) => {\n  _s();\n  if (!expenses) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"No expenses to report on!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 16\n    }, this);\n  }\n  // console.log(expenses)\n  const [monthlyData, setMonthlyData] = useState({});\n  const [categoryData, setCategoryData] = useState({});\n  const [weeklyTrendData, setWeeklyTrendData] = useState({});\n  useEffect(() => {\n    processData(expenses);\n  }, [expenses]);\n  const processData = expenses => {\n    const monthlyTotals = {};\n    const categoryTotals = {};\n    const weeklyTrends = [0, 0, 0, 0];\n    expenses.forEach(expense => {\n      const date = new Date(expense.date);\n      const month = date.toLocaleString('default', {\n        month: 'short'\n      });\n      const week = Math.floor((date.getDate() - 1) / 7);\n\n      // Monthly Totals for Bar Chart\n      monthlyTotals[month] = (monthlyTotals[month] || 0) + expense.amount;\n\n      // Category Totals for Pie Chart\n      categoryTotals[expense.category] = (categoryTotals[expense.category] || 0) + expense.amount;\n\n      // Weekly Trends for Line Chart\n      if (week >= 0 && week < 4) {\n        weeklyTrends[week] += expense.amount;\n      }\n    });\n    setMonthlyData({\n      labels: Object.keys(monthlyTotals),\n      datasets: [{\n        label: 'Monthly Expenses',\n        data: Object.values(monthlyTotals),\n        backgroundColor: 'rgba(75, 192, 192, 0.5)'\n      }]\n    });\n    setCategoryData({\n      labels: Object.keys(categoryTotals),\n      datasets: [{\n        label: 'Category-wise Expenses',\n        data: Object.values(categoryTotals),\n        backgroundColor: ['rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)', 'rgba(255, 206, 86, 0.6)', 'rgba(75, 192, 192, 0.6)', 'rgba(153, 102, 255, 0.6)']\n      }]\n    });\n    setWeeklyTrendData({\n      labels: ['Week 1', 'Week 2', 'Week 3', 'Week 4'],\n      datasets: [{\n        label: 'Weekly Expenses Trend',\n        data: weeklyTrends,\n        borderColor: 'rgba(75, 192, 192, 1)',\n        backgroundColor: 'rgba(75, 192, 192, 0.3)',\n        fill: true\n      }]\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reports\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: '700px',\n        margin: 'auto',\n        padding: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Monthly Expenses (Bar Chart)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        data: monthlyData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: '500px',\n        margin: 'auto',\n        padding: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Category-wise Expenses (Pie Chart)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Pie, {\n        data: categoryData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: '700px',\n        margin: 'auto',\n        padding: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Weekly Expenses Trend (Line Chart)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: weeklyTrendData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n_s(Reports, \"DjC4rH2wQZSxPf2ZHZPmr4PjU/A=\");\n_c = Reports;\nexport default Reports;\nvar _c;\n$RefreshReg$(_c, \"Reports\");","map":{"version":3,"names":["React","useEffect","useState","Bar","Pie","Line","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","ArcElement","PointElement","LineElement","jsxDEV","_jsxDEV","register","Reports","expenses","_s","children","fileName","_jsxFileName","lineNumber","columnNumber","monthlyData","setMonthlyData","categoryData","setCategoryData","weeklyTrendData","setWeeklyTrendData","processData","monthlyTotals","categoryTotals","weeklyTrends","forEach","expense","date","Date","month","toLocaleString","week","Math","floor","getDate","amount","category","labels","Object","keys","datasets","label","data","values","backgroundColor","borderColor","fill","style","padding","maxWidth","margin","_c","$RefreshReg$"],"sources":["/Users/arvindraju/MERN-Expense-Tracker/frontend/src/pages/Reports.js"],"sourcesContent":["// src/pages/Reports.js\nimport React, { useEffect, useState } from 'react';\nimport { Bar, Pie, Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, ArcElement, PointElement, LineElement } from 'chart.js';\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n    ArcElement,\n    PointElement,\n    LineElement\n);\n\nconst Reports = ({ expenses = [] }) => {\n    if(!expenses){\n        return <h1>No expenses to report on!</h1>\n    } \n    // console.log(expenses)\n    const [monthlyData, setMonthlyData] = useState({});\n    const [categoryData, setCategoryData] = useState({});\n    const [weeklyTrendData, setWeeklyTrendData] = useState({});\n\n    useEffect(() => {\n        processData(expenses);\n    }, [expenses]);\n\n    const processData = (expenses) => {\n        const monthlyTotals = {};\n        const categoryTotals = {};\n        const weeklyTrends = [0, 0, 0, 0];\n\n        expenses.forEach(expense => {\n            const date = new Date(expense.date);\n            const month = date.toLocaleString('default', { month: 'short' });\n            const week = Math.floor((date.getDate() - 1) / 7);\n\n            // Monthly Totals for Bar Chart\n            monthlyTotals[month] = (monthlyTotals[month] || 0) + expense.amount;\n\n            // Category Totals for Pie Chart\n            categoryTotals[expense.category] = (categoryTotals[expense.category] || 0) + expense.amount;\n\n            // Weekly Trends for Line Chart\n            if (week >= 0 && week < 4) {\n                weeklyTrends[week] += expense.amount;\n            }\n        });\n\n        setMonthlyData({\n            labels: Object.keys(monthlyTotals),\n            datasets: [\n                {\n                    label: 'Monthly Expenses',\n                    data: Object.values(monthlyTotals),\n                    backgroundColor: 'rgba(75, 192, 192, 0.5)',\n                },\n            ],\n        });\n\n        setCategoryData({\n            labels: Object.keys(categoryTotals),\n            datasets: [\n                {\n                    label: 'Category-wise Expenses',\n                    data: Object.values(categoryTotals),\n                    backgroundColor: [\n                        'rgba(255, 99, 132, 0.6)',\n                        'rgba(54, 162, 235, 0.6)',\n                        'rgba(255, 206, 86, 0.6)',\n                        'rgba(75, 192, 192, 0.6)',\n                        'rgba(153, 102, 255, 0.6)',\n                    ],\n                },\n            ],\n        });\n\n        setWeeklyTrendData({\n            labels: ['Week 1', 'Week 2', 'Week 3', 'Week 4'],\n            datasets: [\n                {\n                    label: 'Weekly Expenses Trend',\n                    data: weeklyTrends,\n                    borderColor: 'rgba(75, 192, 192, 1)',\n                    backgroundColor: 'rgba(75, 192, 192, 0.3)',\n                    fill: true,\n                },\n            ],\n        });\n    };\n\n    return (\n        <div style={{ padding: '20px' }}>\n            <h1>Reports</h1>\n\n            <div style={{ maxWidth: '700px', margin: 'auto', padding: '20px' }}>\n                <h3>Monthly Expenses (Bar Chart)</h3>\n                <Bar data={monthlyData} />\n            </div>\n\n            <div style={{ maxWidth: '500px', margin: 'auto', padding: '20px' }}>\n                <h3>Category-wise Expenses (Pie Chart)</h3>\n                <Pie data={categoryData} />\n            </div>\n\n            <div style={{ maxWidth: '700px', margin: 'auto', padding: '20px' }}>\n                <h3>Weekly Expenses Trend (Line Chart)</h3>\n                <Line data={weeklyTrendData} />\n            </div>\n        </div>\n    );\n};\n\nexport default Reports;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}