{"ast":null,"code":"// // src/pages/Reports.js\n// import React, { useEffect, useState } from 'react';\n// import { Bar, Pie, Line } from 'react-chartjs-2';\n// import { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, ArcElement, PointElement, LineElement } from 'chart.js';\n\n// ChartJS.register(\n//     CategoryScale,\n//     LinearScale,\n//     BarElement,\n//     Title,\n//     Tooltip,\n//     Legend,\n//     ArcElement,\n//     PointElement,\n//     LineElement\n// );\n\n// const Reports = ({ expenses = [] }) => {\n//     console.log(expenses)\n//     const [monthlyData, setMonthlyData] = useState({});\n//     const [categoryData, setCategoryData] = useState({});\n//     const [weeklyTrendData, setWeeklyTrendData] = useState({});\n\n//     useEffect(() => {\n//         processData(expenses);\n//     }, [expenses]);\n\n//     const processData = (expenses) => {\n//         const monthlyTotals = {};\n//         const categoryTotals = {};\n//         const weeklyTrends = [0, 0, 0, 0];\n\n//         expenses.forEach(expense => {\n//             const date = new Date(expense.date);\n//             const month = date.toLocaleString('default', { month: 'short' });\n//             const week = Math.floor((date.getDate() - 1) / 7);\n\n//             // Monthly Totals for Bar Chart\n//             monthlyTotals[month] = (monthlyTotals[month] || 0) + expense.amount;\n\n//             // Category Totals for Pie Chart\n//             categoryTotals[expense.category] = (categoryTotals[expense.category] || 0) + expense.amount;\n\n//             // Weekly Trends for Line Chart\n//             if (week >= 0 && week < 4) {\n//                 weeklyTrends[week] += expense.amount;\n//             }\n//         });\n\n//         setMonthlyData({\n//             labels: Object.keys(monthlyTotals),\n//             datasets: [\n//                 {\n//                     label: 'Monthly Expenses',\n//                     data: Object.values(monthlyTotals),\n//                     backgroundColor: 'rgba(75, 192, 192, 0.5)',\n//                 },\n//             ],\n//         });\n\n//         setCategoryData({\n//             labels: Object.keys(categoryTotals),\n//             datasets: [\n//                 {\n//                     label: 'Category-wise Expenses',\n//                     data: Object.values(categoryTotals),\n//                     backgroundColor: [\n//                         'rgba(255, 99, 132, 0.6)',\n//                         'rgba(54, 162, 235, 0.6)',\n//                         'rgba(255, 206, 86, 0.6)',\n//                         'rgba(75, 192, 192, 0.6)',\n//                         'rgba(153, 102, 255, 0.6)',\n//                     ],\n//                 },\n//             ],\n//         });\n\n//         setWeeklyTrendData({\n//             labels: ['Week 1', 'Week 2', 'Week 3', 'Week 4'],\n//             datasets: [\n//                 {\n//                     label: 'Weekly Expenses Trend',\n//                     data: weeklyTrends,\n//                     borderColor: 'rgba(75, 192, 192, 1)',\n//                     backgroundColor: 'rgba(75, 192, 192, 0.3)',\n//                     fill: true,\n//                 },\n//             ],\n//         });\n//     };\n\n//     return (\n//         <div style={{ padding: '20px' }}>\n//             <h1>Reports</h1>\n\n//             <div style={{ maxWidth: '700px', margin: 'auto', padding: '20px' }}>\n//                 <h3>Monthly Expenses (Bar Chart)</h3>\n//                 <Bar data={monthlyData} />\n//             </div>\n\n//             <div style={{ maxWidth: '500px', margin: 'auto', padding: '20px' }}>\n//                 <h3>Category-wise Expenses (Pie Chart)</h3>\n//                 <Pie data={categoryData} />\n//             </div>\n\n//             <div style={{ maxWidth: '700px', margin: 'auto', padding: '20px' }}>\n//                 <h3>Weekly Expenses Trend (Line Chart)</h3>\n//                 <Line data={weeklyTrendData} />\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default Reports;","map":{"version":3,"names":[],"sources":["/Users/arvindraju/MERN-Expense-Tracker/frontend/src/pages/Reports.js"],"sourcesContent":["// // src/pages/Reports.js\n// import React, { useEffect, useState } from 'react';\n// import { Bar, Pie, Line } from 'react-chartjs-2';\n// import { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, ArcElement, PointElement, LineElement } from 'chart.js';\n\n// ChartJS.register(\n//     CategoryScale,\n//     LinearScale,\n//     BarElement,\n//     Title,\n//     Tooltip,\n//     Legend,\n//     ArcElement,\n//     PointElement,\n//     LineElement\n// );\n\n// const Reports = ({ expenses = [] }) => {\n//     console.log(expenses)\n//     const [monthlyData, setMonthlyData] = useState({});\n//     const [categoryData, setCategoryData] = useState({});\n//     const [weeklyTrendData, setWeeklyTrendData] = useState({});\n\n//     useEffect(() => {\n//         processData(expenses);\n//     }, [expenses]);\n\n//     const processData = (expenses) => {\n//         const monthlyTotals = {};\n//         const categoryTotals = {};\n//         const weeklyTrends = [0, 0, 0, 0];\n\n//         expenses.forEach(expense => {\n//             const date = new Date(expense.date);\n//             const month = date.toLocaleString('default', { month: 'short' });\n//             const week = Math.floor((date.getDate() - 1) / 7);\n\n//             // Monthly Totals for Bar Chart\n//             monthlyTotals[month] = (monthlyTotals[month] || 0) + expense.amount;\n\n//             // Category Totals for Pie Chart\n//             categoryTotals[expense.category] = (categoryTotals[expense.category] || 0) + expense.amount;\n\n//             // Weekly Trends for Line Chart\n//             if (week >= 0 && week < 4) {\n//                 weeklyTrends[week] += expense.amount;\n//             }\n//         });\n\n//         setMonthlyData({\n//             labels: Object.keys(monthlyTotals),\n//             datasets: [\n//                 {\n//                     label: 'Monthly Expenses',\n//                     data: Object.values(monthlyTotals),\n//                     backgroundColor: 'rgba(75, 192, 192, 0.5)',\n//                 },\n//             ],\n//         });\n\n//         setCategoryData({\n//             labels: Object.keys(categoryTotals),\n//             datasets: [\n//                 {\n//                     label: 'Category-wise Expenses',\n//                     data: Object.values(categoryTotals),\n//                     backgroundColor: [\n//                         'rgba(255, 99, 132, 0.6)',\n//                         'rgba(54, 162, 235, 0.6)',\n//                         'rgba(255, 206, 86, 0.6)',\n//                         'rgba(75, 192, 192, 0.6)',\n//                         'rgba(153, 102, 255, 0.6)',\n//                     ],\n//                 },\n//             ],\n//         });\n\n//         setWeeklyTrendData({\n//             labels: ['Week 1', 'Week 2', 'Week 3', 'Week 4'],\n//             datasets: [\n//                 {\n//                     label: 'Weekly Expenses Trend',\n//                     data: weeklyTrends,\n//                     borderColor: 'rgba(75, 192, 192, 1)',\n//                     backgroundColor: 'rgba(75, 192, 192, 0.3)',\n//                     fill: true,\n//                 },\n//             ],\n//         });\n//     };\n\n//     return (\n//         <div style={{ padding: '20px' }}>\n//             <h1>Reports</h1>\n\n//             <div style={{ maxWidth: '700px', margin: 'auto', padding: '20px' }}>\n//                 <h3>Monthly Expenses (Bar Chart)</h3>\n//                 <Bar data={monthlyData} />\n//             </div>\n\n//             <div style={{ maxWidth: '500px', margin: 'auto', padding: '20px' }}>\n//                 <h3>Category-wise Expenses (Pie Chart)</h3>\n//                 <Pie data={categoryData} />\n//             </div>\n\n//             <div style={{ maxWidth: '700px', margin: 'auto', padding: '20px' }}>\n//                 <h3>Weekly Expenses Trend (Line Chart)</h3>\n//                 <Line data={weeklyTrendData} />\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default Reports;\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}